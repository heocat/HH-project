{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hnk31\\\\Desktop\\\\\\uCF54\\uB529\\\\\\uACF5\\uBD80\\\\\\uC5F0\\uC2B5\\\\React\\\\todo-react-app\\\\src\\\\App.js\";\nimport \"./App.css\";\nimport React from \"react\";\nimport Todo from \"./Todo\";\nimport AddTodo from \"./AddTodo\";\nimport { Paper, List, Container } from \"@mui/material\";\nimport { call } from \"./service/ApiService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.add = item => {\n      call(\"/todo\", \"POST\", item).then(response => this.setState({\n        items: response.data\n      }));\n    };\n\n    this.state = {\n      items: []\n    };\n  } //기존코드\n  // componentDidMount() {\n  //   const requestOptions = {\n  //     method: \"GET\",\n  //     headers: { \"content-Type\": \"application/json\" },\n  //   };\n  //   fetch(\"http://localhost:8080/todo\", requestOptions)\n  //     .then(response => response.json())\n  //     .then(response => {\n  //       this.setState({\n  //         otems: response.data,\n  //       });\n  //     });\n  // }\n  // add = item => {\n  //   const thisItems = this.state.items;\n  //   item.id = \"ID-\" + thisItems.length; //key를 위한 id 추가\n  //   item.done = false; //done 초기화\n  //   thisItems.push(item); //리스트에 아이템 추가\n  //   this.setState({ items: thisItems }); //업데이트는 반드시 this.setState로 해야 됨\n  //   console.log(\"item:\" + this.state.items);\n  // };\n  // delete = item => {\n  //   const thisItems = this.state.items;\n  //   console.log(\"Before Update Items:\", this.state.items);\n  //   const newItems = thisItems.filter(e => e.id !== item.id);\n  //   this.setState({ items: newItems }, () => {\n  //     //디버깅 콜백\n  //     console.log(\"update Items:\", this.state.items);\n  //   });\n  // };\n  //call 함수로 간결\n\n\n  componentDidMount() {\n    call(\"/todo\", \"GET\", null).then(response => this.setState({\n      items: response.data\n    }));\n  }\n\n  render() {\n    const todoItems = this.state.items.length > 0 && /*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        margin: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: this.state.items.map((item, idx) => /*#__PURE__*/_jsxDEV(Todo, {\n          item: item,\n          delete: this.delete\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxwidth: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(AddTodo, {\n          add: this.add\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TodoList\",\n          children: todoItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/hnk31/Desktop/코딩/공부/연습/React/todo-react-app/src/App.js"],"names":["React","Todo","AddTodo","Paper","List","Container","call","App","Component","constructor","props","add","item","then","response","setState","items","data","state","componentDidMount","render","todoItems","length","margin","map","idx","delete","id"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,SAAtB,QAAuC,eAAvC;AACA,SAASC,IAAT,QAAqB,sBAArB;;;AAEA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA+CnBC,GA/CmB,GA+CbC,IAAI,IAAI;AACZN,MAAAA,IAAI,CAAC,OAAD,EAAU,MAAV,EAAkBM,IAAlB,CAAJ,CAA4BC,IAA5B,CAAiCC,QAAQ,IACvC,KAAKC,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAEF,QAAQ,CAACG;AAAlB,OAAd,CADF;AAGD,KAnDkB;;AAEjB,SAAKC,KAAL,GAAa;AACXF,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD,GAN+B,CAOhC;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACAG,EAAAA,iBAAiB,GAAG;AAClBb,IAAAA,IAAI,CAAC,OAAD,EAAU,KAAV,EAAiB,IAAjB,CAAJ,CAA2BO,IAA3B,CAAgCC,QAAQ,IACtC,KAAKC,QAAL,CAAc;AAAEC,MAAAA,KAAK,EAAEF,QAAQ,CAACG;AAAlB,KAAd,CADF;AAGD;;AAODG,EAAAA,MAAM,GAAG;AACP,UAAMC,SAAS,GAAG,KAAKH,KAAL,CAAWF,KAAX,CAAiBM,MAAjB,GAA0B,CAA1B,iBAChB,QAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAd;AAAA,6BACE,QAAC,IAAD;AAAA,kBACG,KAAKL,KAAL,CAAWF,KAAX,CAAiBQ,GAAjB,CAAqB,CAACZ,IAAD,EAAOa,GAAP,kBACpB,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEb,IAAZ;AAAgC,UAAA,MAAM,EAAE,KAAKc;AAA7C,WAAuBd,IAAI,CAACe,EAA5B;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;;AASA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAC,IAApB;AAAA,gCACE,QAAC,OAAD;AAAS,UAAA,GAAG,EAAE,KAAKhB;AAAnB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,oBAA2BU;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAvE+B;;AAyElC,eAAed,GAAf","sourcesContent":["import \"./App.css\";\nimport React from \"react\";\nimport Todo from \"./Todo\";\nimport AddTodo from \"./AddTodo\";\nimport { Paper, List, Container } from \"@mui/material\";\nimport { call } from \"./service/ApiService\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n    };\n  }\n  //기존코드\n  // componentDidMount() {\n  //   const requestOptions = {\n  //     method: \"GET\",\n  //     headers: { \"content-Type\": \"application/json\" },\n  //   };\n\n  //   fetch(\"http://localhost:8080/todo\", requestOptions)\n  //     .then(response => response.json())\n  //     .then(response => {\n  //       this.setState({\n  //         otems: response.data,\n  //       });\n  //     });\n  // }\n  // add = item => {\n  //   const thisItems = this.state.items;\n  //   item.id = \"ID-\" + thisItems.length; //key를 위한 id 추가\n  //   item.done = false; //done 초기화\n  //   thisItems.push(item); //리스트에 아이템 추가\n  //   this.setState({ items: thisItems }); //업데이트는 반드시 this.setState로 해야 됨\n  //   console.log(\"item:\" + this.state.items);\n  // };\n\n  // delete = item => {\n  //   const thisItems = this.state.items;\n  //   console.log(\"Before Update Items:\", this.state.items);\n  //   const newItems = thisItems.filter(e => e.id !== item.id);\n  //   this.setState({ items: newItems }, () => {\n  //     //디버깅 콜백\n  //     console.log(\"update Items:\", this.state.items);\n  //   });\n  // };\n\n  //call 함수로 간결\n  componentDidMount() {\n    call(\"/todo\", \"GET\", null).then(response =>\n      this.setState({ items: response.data })\n    );\n  }\n\n  add = item => {\n    call(\"/todo\", \"POST\", item).then(response =>\n      this.setState({ items: response.data })\n    );\n  };\n  render() {\n    const todoItems = this.state.items.length > 0 && (\n      <Paper style={{ margin: 16 }}>\n        <List>\n          {this.state.items.map((item, idx) => (\n            <Todo item={item} key={item.id} delete={this.delete} />\n          ))}\n        </List>\n      </Paper>\n    );\n    return (\n      <div className='App'>\n        <Container maxwidth='md'>\n          <AddTodo add={this.add} />\n          <div className='TodoList'>{todoItems}</div>\n        </Container>\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}