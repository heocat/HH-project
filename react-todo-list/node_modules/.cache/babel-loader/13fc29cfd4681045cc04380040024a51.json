{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hnk31\\\\Desktop\\\\\\uCF54\\uB529\\\\\\uACF5\\uBD80\\\\\\uC5F0\\uC2B5\\\\React\\\\todo-react-app\\\\src\\\\App.js\";\nimport \"./App.css\";\nimport React from \"react\";\nimport Todo from \"./Todo\";\nimport AddTodo from \"./AddTodo\";\nimport { Paper, List, Container } from \"@mui/material\";\nimport { call } from \"./service/ApiService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.add = item => {\n      const thisItems = this.state.items;\n      item.id = \"ID-\" + thisItems.length; //key를 위한 id 추가\n\n      item.done = false; //done 초기화\n\n      thisItems.push(item); //리스트에 아이템 추가\n\n      this.setState({\n        items: thisItems\n      }); //업데이트는 반드시 this.setState로 해야 됨\n\n      console.log(\"item:\" + this.state.items);\n    };\n\n    this.delete = item => {\n      const thisItems = this.state.items;\n      console.log(\"Before Update Items:\", this.state.items);\n      const newItems = thisItems.filter(e => e.id !== item.id);\n      this.setState({\n        items: newItems\n      }, () => {\n        //디버깅 콜백\n        console.log(\"update Items:\", this.state.items);\n      });\n    };\n\n    this.state = {\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    call(\"/todo\", \"GET\", null).then(response => this.setState({\n      items: response.data\n    }));\n  }\n\n  render() {\n    const todoItems = this.state.items.length > 0 && /*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        margin: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: this.state.items.map((item, idx) => /*#__PURE__*/_jsxDEV(Todo, {\n          item: item,\n          delete: this.delete\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxwidth: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(AddTodo, {\n          add: this.add\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TodoList\",\n          children: todoItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/hnk31/Desktop/코딩/공부/연습/React/todo-react-app/src/App.js"],"names":["React","Todo","AddTodo","Paper","List","Container","call","App","Component","constructor","props","add","item","thisItems","state","items","id","length","done","push","setState","console","log","delete","newItems","filter","e","componentDidMount","then","response","data","render","todoItems","margin","map","idx"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport React from \"react\";\nimport Todo from \"./Todo\";\nimport AddTodo from \"./AddTodo\";\nimport { Paper, List, Container } from \"@mui/material\";\nimport { call } from \"./service/ApiService\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n    };\n  }\n\n  componentDidMount() {\n    call(\"/todo\", \"GET\", null).then(response =>\n      this.setState({ items: response.data })\n    );\n  }\n  add = item => {\n    const thisItems = this.state.items;\n    item.id = \"ID-\" + thisItems.length; //key를 위한 id 추가\n    item.done = false; //done 초기화\n    thisItems.push(item); //리스트에 아이템 추가\n    this.setState({ items: thisItems }); //업데이트는 반드시 this.setState로 해야 됨\n    console.log(\"item:\" + this.state.items);\n  };\n\n  delete = item => {\n    const thisItems = this.state.items;\n    console.log(\"Before Update Items:\", this.state.items);\n    const newItems = thisItems.filter(e => e.id !== item.id);\n    this.setState({ items: newItems }, () => {\n      //디버깅 콜백\n      console.log(\"update Items:\", this.state.items);\n    });\n  };\n\n  render() {\n    const todoItems = this.state.items.length > 0 && (\n      <Paper style={{ margin: 16 }}>\n        <List>\n          {this.state.items.map((item, idx) => (\n            <Todo item={item} key={item.id} delete={this.delete} />\n          ))}\n        </List>\n      </Paper>\n    );\n    return (\n      <div className='App'>\n        <Container maxwidth='md'>\n          <AddTodo add={this.add} />\n          <div className='TodoList'>{todoItems}</div>\n        </Container>\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}